spring.application.name=d3-zepkin-currency-conversion-service-openfeign

server.port=8100

# logging
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

logging.level.com.srvivek.sboot=debug

# actuator allow all endpoints
management.endpoints.web.exposure.include=*

# Start: micrometer configuration

# Add sampling configuration to define how much percentage of request will be sampled.
management.tracing.sampling.probability=1.0

# Zipking server base url
management.zipkin.tracing.endpoint= http://localhost:9411/api/v2/spans

# docker-componse Zipkin server base url
# MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans


# End: micrometer configuration


# load balancer
logging.level.com.netflix.discovery=debug

# Start: Eureka client config

# Map of availability zone to list of fully qualified URLs to communicate with eureka server. 
# Each value can be a single URL or a comma separated list of alternative locations. 
# Typically the eureka server URLs carry protocol,host,port,context and version information if any. 
# Example: https://ec2-256-156-243-129.compute-1.amazonaws.com:7001/eureka/ 
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Enables the Eureka health check handler.
eureka.client.healthcheck.enabled=true

eureka.instance.lease-renewal-interval-in-seconds=60
eureka.instance.lease-expiration-duration-in-seconds=60

# End: Eureka client config


# Start: Spring Load Balancer

# Enable load balancer.
spring.cloud.loadbalancer.enabled=true

# Enables LoadBalancer retries.
spring.cloud.loadbalancer.retry.enabled=true


# End: Spring Load Balancer

# Start: Cloud config client

# by default it's enabled
spring.cloud.config.enabled=true

# Name of the service to be shared wit config server
spring.cloud.config.name=currency-conversion-service

# default active profile
spring.cloud.config.profile=dev


# 8888 - it's default port for config server
spring.config.import=optional:configserver:http://localhost:8888

# End: Cloud config client